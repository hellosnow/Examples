{
  "swagger": "2.0",
  "info": {
    "title": "OData Service for namespace microsoft.graph",
    "description": "This OData service is located at http://localhost",
    "version": "1.0.1"
  },
  "host": "localhost",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/directoryObjects": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Get entities from directoryObjects",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryObjects",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryObject"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Add new entity to directoryObjects",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')": {
      "get": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Get entity from directoryObjects by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Update entity in directoryObjects",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryObject"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Delete entity from directoryObjects",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects/microsoft.graph.getByIds": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getByIds",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "ids": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "types": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.checkMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action checkMemberGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "groupIds": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.getMemberGroups": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getMemberGroups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "securityEnabledOnly": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryObjects('{id}')/microsoft.graph.getMemberObjects": {
      "post": {
        "tags": [
          "directoryObjects"
        ],
        "summary": "Invoke action getMemberObjects",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "securityEnabledOnly": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get entities from devices",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "accountEnabled",
                "accountEnabled desc",
                "alternativeSecurityIds",
                "alternativeSecurityIds desc",
                "approximateLastSignInDateTime",
                "approximateLastSignInDateTime desc",
                "deviceId",
                "deviceId desc",
                "deviceMetadata",
                "deviceMetadata desc",
                "deviceVersion",
                "deviceVersion desc",
                "displayName",
                "displayName desc",
                "isCompliant",
                "isCompliant desc",
                "isManaged",
                "isManaged desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "operatingSystem",
                "operatingSystem desc",
                "operatingSystemVersion",
                "operatingSystemVersion desc",
                "physicalIds",
                "physicalIds desc",
                "trustType",
                "trustType desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "alternativeSecurityIds",
                "approximateLastSignInDateTime",
                "deviceId",
                "deviceMetadata",
                "deviceVersion",
                "displayName",
                "isCompliant",
                "isManaged",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "operatingSystem",
                "operatingSystemVersion",
                "physicalIds",
                "trustType"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "registeredOwners",
                "registeredUsers",
                "extensions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of devices",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.device"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "devices"
        ],
        "summary": "Add new entity to devices",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/devices('{id}')": {
      "get": {
        "tags": [
          "devices"
        ],
        "summary": "Get entity from devices by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "alternativeSecurityIds",
                "approximateLastSignInDateTime",
                "deviceId",
                "deviceMetadata",
                "deviceVersion",
                "displayName",
                "isCompliant",
                "isManaged",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "operatingSystem",
                "operatingSystemVersion",
                "physicalIds",
                "trustType"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "registeredOwners",
                "registeredUsers",
                "extensions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "devices"
        ],
        "summary": "Update entity in devices",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.device"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "devices"
        ],
        "summary": "Delete entity from devices",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get entities from domains",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "authenticationType",
                "authenticationType desc",
                "availabilityStatus",
                "availabilityStatus desc",
                "isAdminManaged",
                "isAdminManaged desc",
                "isDefault",
                "isDefault desc",
                "isInitial",
                "isInitial desc",
                "isRoot",
                "isRoot desc",
                "isVerified",
                "isVerified desc",
                "supportedServices",
                "supportedServices desc",
                "state",
                "state desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "authenticationType",
                "availabilityStatus",
                "isAdminManaged",
                "isDefault",
                "isInitial",
                "isRoot",
                "isVerified",
                "supportedServices",
                "state"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "serviceConfigurationRecords",
                "verificationDnsRecords",
                "domainNameReferences"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of domains",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.domain"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Add new entity to domains",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains('{id}')": {
      "get": {
        "tags": [
          "domains"
        ],
        "summary": "Get entity from domains by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "authenticationType",
                "availabilityStatus",
                "isAdminManaged",
                "isDefault",
                "isInitial",
                "isRoot",
                "isVerified",
                "supportedServices",
                "state"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "serviceConfigurationRecords",
                "verificationDnsRecords",
                "domainNameReferences"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "domains"
        ],
        "summary": "Update entity in domains",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domain"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "domains"
        ],
        "summary": "Delete entity from domains",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domains('{id}')/microsoft.graph.verify": {
      "post": {
        "tags": [
          "domains"
        ],
        "summary": "Invoke action verify",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domainDnsRecords": {
      "get": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Get entities from domainDnsRecords",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "isOptional",
                "isOptional desc",
                "label",
                "label desc",
                "recordType",
                "recordType desc",
                "supportedService",
                "supportedService desc",
                "ttl",
                "ttl desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isOptional",
                "label",
                "recordType",
                "supportedService",
                "ttl"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of domainDnsRecords",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Add new entity to domainDnsRecords",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/domainDnsRecords('{id}')": {
      "get": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Get entity from domainDnsRecords by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "isOptional",
                "label",
                "recordType",
                "supportedService",
                "ttl"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Update entity in domainDnsRecords",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "domainDnsRecords"
        ],
        "summary": "Delete entity from domainDnsRecords",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get entities from groups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "classification",
                "classification desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "groupTypes",
                "groupTypes desc",
                "mail",
                "mail desc",
                "mailEnabled",
                "mailEnabled desc",
                "mailNickname",
                "mailNickname desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "securityEnabled",
                "securityEnabled desc",
                "visibility",
                "visibility desc",
                "allowExternalSenders",
                "allowExternalSenders desc",
                "autoSubscribeNewMembers",
                "autoSubscribeNewMembers desc",
                "isSubscribedByMail",
                "isSubscribedByMail desc",
                "unseenCount",
                "unseenCount desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "classification",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "onPremisesLastSyncDateTime",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "proxyAddresses",
                "securityEnabled",
                "visibility",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isSubscribedByMail",
                "unseenCount"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "extensions",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of groups",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.group"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Add new entity to groups",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Get entity from groups by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "classification",
                "description",
                "displayName",
                "groupTypes",
                "mail",
                "mailEnabled",
                "mailNickname",
                "onPremisesLastSyncDateTime",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "proxyAddresses",
                "securityEnabled",
                "visibility",
                "allowExternalSenders",
                "autoSubscribeNewMembers",
                "isSubscribedByMail",
                "unseenCount"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members",
                "memberOf",
                "createdOnBehalfOf",
                "owners",
                "settings",
                "extensions",
                "threads",
                "calendar",
                "calendarView",
                "events",
                "conversations",
                "photo",
                "photos",
                "acceptedSenders",
                "rejectedSenders",
                "drive",
                "drives",
                "sites",
                "planner",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groups"
        ],
        "summary": "Update entity in groups",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.group"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groups"
        ],
        "summary": "Delete entity from groups",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke function delta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.subscribeByMail": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action subscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.unsubscribeByMail": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action unsubscribeByMail",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.addFavorite": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action addFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.removeFavorite": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action removeFavorite",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groups('{id}')/microsoft.graph.resetUnseenCount": {
      "post": {
        "tags": [
          "groups"
        ],
        "summary": "Invoke action resetUnseenCount",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoles": {
      "get": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Get entities from directoryRoles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc",
                "roleTemplateId",
                "roleTemplateId desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName",
                "roleTemplateId"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryRoles",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryRole"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Add new entity to directoryRoles",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoles('{id}')": {
      "get": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Get entity from directoryRoles by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName",
                "roleTemplateId"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "members"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Update entity in directoryRoles",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRole"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryRoles"
        ],
        "summary": "Delete entity from directoryRoles",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoleTemplates": {
      "get": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Get entities from directoryRoleTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of directoryRoleTemplates",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Add new entity to directoryRoleTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/directoryRoleTemplates('{id}')": {
      "get": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Get entity from directoryRoleTemplates by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "displayName"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Update entity in directoryRoleTemplates",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.directoryRoleTemplate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "directoryRoleTemplates"
        ],
        "summary": "Delete entity from directoryRoleTemplates",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get entities from organization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "country",
                "country desc",
                "countryLetterCode",
                "countryLetterCode desc",
                "displayName",
                "displayName desc",
                "marketingNotificationEmails",
                "marketingNotificationEmails desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "postalCode",
                "postalCode desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationMails desc",
                "securityComplianceNotificationPhones",
                "securityComplianceNotificationPhones desc",
                "state",
                "state desc",
                "street",
                "street desc",
                "technicalNotificationMails",
                "technicalNotificationMails desc",
                "verifiedDomains",
                "verifiedDomains desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "assignedPlans",
                "businessPhones",
                "city",
                "country",
                "countryLetterCode",
                "displayName",
                "marketingNotificationEmails",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationPhones",
                "state",
                "street",
                "technicalNotificationMails",
                "verifiedDomains"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of organization",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.organization"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "organization"
        ],
        "summary": "Add new entity to organization",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/organization('{id}')": {
      "get": {
        "tags": [
          "organization"
        ],
        "summary": "Get entity from organization by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "assignedPlans",
                "businessPhones",
                "city",
                "country",
                "countryLetterCode",
                "displayName",
                "marketingNotificationEmails",
                "onPremisesLastSyncDateTime",
                "onPremisesSyncEnabled",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "securityComplianceNotificationMails",
                "securityComplianceNotificationPhones",
                "state",
                "street",
                "technicalNotificationMails",
                "verifiedDomains"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "extensions"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "organization"
        ],
        "summary": "Update entity in organization",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.organization"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "organization"
        ],
        "summary": "Delete entity from organization",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupSettings": {
      "get": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Get entities from groupSettings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "templateId",
                "templateId desc",
                "values",
                "values desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "templateId",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of groupSettings",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.groupSetting"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Add new entity to groupSettings",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupSettings('{id}')": {
      "get": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Get entity from groupSettings by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "templateId",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Update entity in groupSettings",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSetting"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groupSettings"
        ],
        "summary": "Delete entity from groupSettings",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupSettingTemplates": {
      "get": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Get entities from groupSettingTemplates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "displayName",
                "displayName desc",
                "description",
                "description desc",
                "values",
                "values desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "description",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of groupSettingTemplates",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Add new entity to groupSettingTemplates",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/groupSettingTemplates('{id}')": {
      "get": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Get entity from groupSettingTemplates by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "displayName",
                "description",
                "values"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Update entity in groupSettingTemplates",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.groupSettingTemplate"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "groupSettingTemplates"
        ],
        "summary": "Delete entity from groupSettingTemplates",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/subscribedSkus": {
      "get": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Get entities from subscribedSkus",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "capabilityStatus",
                "capabilityStatus desc",
                "consumedUnits",
                "consumedUnits desc",
                "prepaidUnits",
                "prepaidUnits desc",
                "servicePlans",
                "servicePlans desc",
                "skuId",
                "skuId desc",
                "skuPartNumber",
                "skuPartNumber desc",
                "appliesTo",
                "appliesTo desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "capabilityStatus",
                "consumedUnits",
                "prepaidUnits",
                "servicePlans",
                "skuId",
                "skuPartNumber",
                "appliesTo"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of subscribedSkus",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.subscribedSku"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Add new entity to subscribedSkus",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/subscribedSkus('{id}')": {
      "get": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Get entity from subscribedSkus by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "capabilityStatus",
                "consumedUnits",
                "prepaidUnits",
                "servicePlans",
                "skuId",
                "skuPartNumber",
                "appliesTo"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Update entity in subscribedSkus",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscribedSku"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "subscribedSkus"
        ],
        "summary": "Delete entity from subscribedSkus",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get entities from users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "accountEnabled",
                "accountEnabled desc",
                "assignedLicenses",
                "assignedLicenses desc",
                "assignedPlans",
                "assignedPlans desc",
                "businessPhones",
                "businessPhones desc",
                "city",
                "city desc",
                "companyName",
                "companyName desc",
                "country",
                "country desc",
                "department",
                "department desc",
                "displayName",
                "displayName desc",
                "givenName",
                "givenName desc",
                "imAddresses",
                "imAddresses desc",
                "jobTitle",
                "jobTitle desc",
                "mail",
                "mail desc",
                "mailNickname",
                "mailNickname desc",
                "mobilePhone",
                "mobilePhone desc",
                "onPremisesImmutableId",
                "onPremisesImmutableId desc",
                "onPremisesLastSyncDateTime",
                "onPremisesLastSyncDateTime desc",
                "onPremisesSecurityIdentifier",
                "onPremisesSecurityIdentifier desc",
                "onPremisesSyncEnabled",
                "onPremisesSyncEnabled desc",
                "passwordPolicies",
                "passwordPolicies desc",
                "passwordProfile",
                "passwordProfile desc",
                "officeLocation",
                "officeLocation desc",
                "postalCode",
                "postalCode desc",
                "preferredLanguage",
                "preferredLanguage desc",
                "provisionedPlans",
                "provisionedPlans desc",
                "proxyAddresses",
                "proxyAddresses desc",
                "state",
                "state desc",
                "streetAddress",
                "streetAddress desc",
                "surname",
                "surname desc",
                "usageLocation",
                "usageLocation desc",
                "userPrincipalName",
                "userPrincipalName desc",
                "userType",
                "userType desc",
                "mailboxSettings",
                "mailboxSettings desc",
                "aboutMe",
                "aboutMe desc",
                "birthday",
                "birthday desc",
                "hireDate",
                "hireDate desc",
                "interests",
                "interests desc",
                "mySite",
                "mySite desc",
                "pastProjects",
                "pastProjects desc",
                "preferredName",
                "preferredName desc",
                "responsibilities",
                "responsibilities desc",
                "schools",
                "schools desc",
                "skills",
                "skills desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "displayName",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "licenseDetails",
                "extensions",
                "messages",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "planner",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of users",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.user"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Add new entity to users",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get entity from users by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "displayName",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "licenseDetails",
                "extensions",
                "messages",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "planner",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "users"
        ],
        "summary": "Update entity in users",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "users"
        ],
        "summary": "Delete entity from users",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function delta",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action assignLicense",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "addLicenses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.assignedLicense"
                  }
                },
                "removeLicenses": {
                  "type": "array",
                  "items": {
                    "format": "uuid",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action changePassword",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action sendMail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "Message": {
                  "$ref": "#/definitions/microsoft.graph.message"
                },
                "SaveToSentItems": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "users"
        ],
        "summary": "Invoke action findMeetingTimes",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "Attendees": {
                  "type": "array",
                  "items": { }
                },
                "LocationConstraint": { },
                "TimeConstraint": { },
                "MeetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "MaxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "IsOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "ReturnSuggestionReasons": {
                  "default": false,
                  "type": "boolean"
                },
                "MinimumAttendeePercentage": {
                  "format": "double"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/users('{id}')/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Invoke function reminderView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.reminder"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/contracts": {
      "get": {
        "tags": [
          "contracts"
        ],
        "summary": "Get entities from contracts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "contractType",
                "contractType desc",
                "customerId",
                "customerId desc",
                "defaultDomainName",
                "defaultDomainName desc",
                "displayName",
                "displayName desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "contractType",
                "customerId",
                "defaultDomainName",
                "displayName"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of contracts",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.contract"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "contracts"
        ],
        "summary": "Add new entity to contracts",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/contracts('{id}')": {
      "get": {
        "tags": [
          "contracts"
        ],
        "summary": "Get entity from contracts by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "contractType",
                "customerId",
                "defaultDomainName",
                "displayName"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "contracts"
        ],
        "summary": "Update entity in contracts",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.contract"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "contracts"
        ],
        "summary": "Delete entity from contracts",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/schemaExtensions": {
      "get": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Get entities from schemaExtensions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "description",
                "description desc",
                "targetTypes",
                "targetTypes desc",
                "properties",
                "properties desc",
                "status",
                "status desc",
                "owner",
                "owner desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "targetTypes",
                "properties",
                "status",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of schemaExtensions",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.schemaExtension"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Add new entity to schemaExtensions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/schemaExtensions('{id}')": {
      "get": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Get entity from schemaExtensions by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "description",
                "targetTypes",
                "properties",
                "status",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Update entity in schemaExtensions",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.schemaExtension"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "schemaExtensions"
        ],
        "summary": "Delete entity from schemaExtensions",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get entities from drives",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "driveType",
                "driveType desc",
                "owner",
                "owner desc",
                "quota",
                "quota desc",
                "sharePointIds",
                "sharePointIds desc",
                "system",
                "system desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of drives",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.drive"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "drives"
        ],
        "summary": "Add new entity to drives",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Get entity from drives by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drives"
        ],
        "summary": "Update entity in drives",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "drives"
        ],
        "summary": "Delete entity from drives",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.recent()": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function recent",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function search",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drives('{id}')/microsoft.graph.sharedWithMe()": {
      "get": {
        "tags": [
          "drives"
        ],
        "summary": "Invoke function sharedWithMe",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get entities from shares",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "owner",
                "owner desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of shares",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "shares"
        ],
        "summary": "Add new entity to shares",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/shares('{id}')": {
      "get": {
        "tags": [
          "shares"
        ],
        "summary": "Get entity from shares by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "owner"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "driveItem",
                "items",
                "list",
                "listItem",
                "root",
                "site"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "shares"
        ],
        "summary": "Update entity in shares",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.sharedDriveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "shares"
        ],
        "summary": "Delete entity from shares",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get entities from sites",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "displayName",
                "displayName desc",
                "root",
                "root desc",
                "sharepointIds",
                "sharepointIds desc",
                "siteCollection",
                "siteCollection desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of sites",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.site"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "sites"
        ],
        "summary": "Add new entity to sites",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Get entity from sites by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "displayName",
                "root",
                "sharepointIds",
                "siteCollection"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "columns",
                "contentTypes",
                "drive",
                "drives",
                "items",
                "lists",
                "sites",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "sites"
        ],
        "summary": "Update entity in sites",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.site"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "sites"
        ],
        "summary": "Delete entity from sites",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/sites('{id}')/microsoft.graph.getByPath(path={path})": {
      "get": {
        "tags": [
          "sites"
        ],
        "summary": "Invoke function getByPath",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": { }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get entities from workbooks",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "createdBy",
                "createdBy desc",
                "createdDateTime",
                "createdDateTime desc",
                "description",
                "description desc",
                "eTag",
                "eTag desc",
                "lastModifiedBy",
                "lastModifiedBy desc",
                "lastModifiedDateTime",
                "lastModifiedDateTime desc",
                "name",
                "name desc",
                "parentReference",
                "parentReference desc",
                "webUrl",
                "webUrl desc",
                "audio",
                "audio desc",
                "content",
                "content desc",
                "cTag",
                "cTag desc",
                "deleted",
                "deleted desc",
                "file",
                "file desc",
                "fileSystemInfo",
                "fileSystemInfo desc",
                "folder",
                "folder desc",
                "image",
                "image desc",
                "location",
                "location desc",
                "package",
                "package desc",
                "photo",
                "photo desc",
                "remoteItem",
                "remoteItem desc",
                "root",
                "root desc",
                "searchResult",
                "searchResult desc",
                "shared",
                "shared desc",
                "sharepointIds",
                "sharepointIds desc",
                "size",
                "size desc",
                "specialFolder",
                "specialFolder desc",
                "video",
                "video desc",
                "webDavUrl",
                "webDavUrl desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of workbooks",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.driveItem"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Add new entity to workbooks",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Get entity from workbooks by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "audio",
                "content",
                "cTag",
                "deleted",
                "file",
                "fileSystemInfo",
                "folder",
                "image",
                "location",
                "package",
                "photo",
                "remoteItem",
                "root",
                "searchResult",
                "shared",
                "sharepointIds",
                "size",
                "specialFolder",
                "video",
                "webDavUrl"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "children",
                "listItem",
                "permissions",
                "thumbnails",
                "workbook"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "workbooks"
        ],
        "summary": "Update entity in workbooks",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.driveItem"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "workbooks"
        ],
        "summary": "Delete entity from workbooks",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.delta(token={token})": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function delta",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.delta()": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function delta",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke function search",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.copy": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action copy",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "parentReference": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.createLink": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action createLink",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "scope": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.createUploadSession": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action createUploadSession",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "item": { }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/workbooks('{id}')/microsoft.graph.invite": {
      "post": {
        "tags": [
          "workbooks"
        ],
        "summary": "Invoke action invite",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "requireSignIn": {
                  "default": false,
                  "type": "boolean"
                },
                "roles": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "sendInvitation": {
                  "default": false,
                  "type": "boolean"
                },
                "message": {
                  "type": "string"
                },
                "recipients": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.driveRecipient"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/subscriptions": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Get entities from subscriptions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "resource",
                "resource desc",
                "changeType",
                "changeType desc",
                "clientState",
                "clientState desc",
                "notificationUrl",
                "notificationUrl desc",
                "expirationDateTime",
                "expirationDateTime desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "resource",
                "changeType",
                "clientState",
                "notificationUrl",
                "expirationDateTime"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of subscriptions",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.subscription"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Add new entity to subscriptions",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/subscriptions('{id}')": {
      "get": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Get entity from subscriptions by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "resource",
                "changeType",
                "clientState",
                "notificationUrl",
                "expirationDateTime"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Update entity in subscriptions",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.subscription"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "subscriptions"
        ],
        "summary": "Delete entity from subscriptions",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/invitations": {
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "Get entities from invitations",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/top"
          },
          {
            "$ref": "#/parameters/skip"
          },
          {
            "$ref": "#/parameters/search"
          },
          {
            "$ref": "#/parameters/filter"
          },
          {
            "$ref": "#/parameters/count"
          },
          {
            "name": "$orderby",
            "in": "Query",
            "description": "Order items by property values",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "id desc",
                "invitedUserDisplayName",
                "invitedUserDisplayName desc",
                "invitedUserType",
                "invitedUserType desc",
                "invitedUserEmailAddress",
                "invitedUserEmailAddress desc",
                "invitedUserMessageInfo",
                "invitedUserMessageInfo desc",
                "sendInvitationMessage",
                "sendInvitationMessage desc",
                "inviteRedirectUrl",
                "inviteRedirectUrl desc",
                "inviteRedeemUrl",
                "inviteRedeemUrl desc",
                "status",
                "status desc"
              ],
              "type": "string"
            }
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "invitedUserDisplayName",
                "invitedUserType",
                "invitedUserEmailAddress",
                "invitedUserMessageInfo",
                "sendInvitationMessage",
                "inviteRedirectUrl",
                "inviteRedeemUrl",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "invitedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entities",
            "schema": {
              "title": "Collection of invitations",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.invitation"
                  }
                }
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "post": {
        "tags": [
          "invitations"
        ],
        "summary": "Add new entity to invitations",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/invitations('{id}')": {
      "get": {
        "tags": [
          "invitations"
        ],
        "summary": "Get entity from invitations by key",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "invitedUserDisplayName",
                "invitedUserType",
                "invitedUserEmailAddress",
                "invitedUserMessageInfo",
                "sendInvitationMessage",
                "inviteRedirectUrl",
                "inviteRedeemUrl",
                "status"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "invitedUser"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "invitations"
        ],
        "summary": "Update entity in invitations",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.invitation"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "delete": {
        "tags": [
          "invitations"
        ],
        "summary": "Delete entity from invitations",
        "parameters": [
          {
            "name": "id",
            "in": "Path",
            "description": "key: id",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "in": "Header",
            "description": "ETag",
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Get me",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "accountEnabled",
                "assignedLicenses",
                "assignedPlans",
                "businessPhones",
                "city",
                "companyName",
                "country",
                "department",
                "displayName",
                "givenName",
                "imAddresses",
                "jobTitle",
                "mail",
                "mailNickname",
                "mobilePhone",
                "onPremisesImmutableId",
                "onPremisesLastSyncDateTime",
                "onPremisesSecurityIdentifier",
                "onPremisesSyncEnabled",
                "passwordPolicies",
                "passwordProfile",
                "officeLocation",
                "postalCode",
                "preferredLanguage",
                "provisionedPlans",
                "proxyAddresses",
                "state",
                "streetAddress",
                "surname",
                "usageLocation",
                "userPrincipalName",
                "userType",
                "mailboxSettings",
                "aboutMe",
                "birthday",
                "hireDate",
                "interests",
                "mySite",
                "pastProjects",
                "preferredName",
                "responsibilities",
                "schools",
                "skills"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "ownedDevices",
                "registeredDevices",
                "manager",
                "directReports",
                "memberOf",
                "createdObjects",
                "ownedObjects",
                "licenseDetails",
                "extensions",
                "messages",
                "mailFolders",
                "calendar",
                "calendars",
                "calendarGroups",
                "calendarView",
                "events",
                "people",
                "contacts",
                "contactFolders",
                "inferenceClassification",
                "photo",
                "photos",
                "drive",
                "drives",
                "planner",
                "onenote"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "me"
        ],
        "summary": "Update me",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.user"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.assignLicense": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action assignLicense",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "addLicenses": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/microsoft.graph.assignedLicense"
                  }
                },
                "removeLicenses": {
                  "type": "array",
                  "items": {
                    "format": "uuid",
                    "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.changePassword": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action changePassword",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "currentPassword": {
                  "type": "string"
                },
                "newPassword": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.sendMail": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action sendMail",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "Message": {
                  "$ref": "#/definitions/microsoft.graph.message"
                },
                "SaveToSentItems": {
                  "default": false,
                  "type": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.findMeetingTimes": {
      "post": {
        "tags": [
          "me"
        ],
        "summary": "Invoke action findMeetingTimes",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Action parameters",
            "schema": {
              "type": "object",
              "properties": {
                "Attendees": {
                  "type": "array",
                  "items": { }
                },
                "LocationConstraint": { },
                "TimeConstraint": { },
                "MeetingDuration": {
                  "format": "duration",
                  "pattern": "^-?P([0-9]+D)?(T([0-9]+H)?([0-9]+M)?([0-9]+([.][0-9]+)?S)?)?$",
                  "type": "string"
                },
                "MaxCandidates": {
                  "format": "int32",
                  "maximum": 2147483647,
                  "minimum": -2147483648,
                  "type": "integer"
                },
                "IsOrganizerOptional": {
                  "default": false,
                  "type": "boolean"
                },
                "ReturnSuggestionReasons": {
                  "default": false,
                  "type": "boolean"
                },
                "MinimumAttendeePercentage": {
                  "format": "double"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/me/microsoft.graph.reminderView(StartDateTime={StartDateTime},EndDateTime={EndDateTime})": {
      "get": {
        "tags": [
          "me"
        ],
        "summary": "Invoke function reminderView",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "StartDateTime",
            "in": "Path",
            "required": true,
            "type": "string"
          },
          {
            "name": "EndDateTime",
            "in": "Path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.reminder"
              }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Get drive",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id",
                "createdBy",
                "createdDateTime",
                "description",
                "eTag",
                "lastModifiedBy",
                "lastModifiedDateTime",
                "name",
                "parentReference",
                "webUrl",
                "driveType",
                "owner",
                "quota",
                "sharePointIds",
                "system"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "createdByUser",
                "lastModifiedByUser",
                "items",
                "list",
                "root",
                "special"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "drive"
        ],
        "summary": "Update drive",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.drive"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.recent()": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function recent",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.search(q={q})": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function search",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "q",
            "in": "Path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/drive/microsoft.graph.sharedWithMe()": {
      "get": {
        "tags": [
          "drive"
        ],
        "summary": "Invoke function sharedWithMe",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": { }
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    },
    "/planner": {
      "get": {
        "tags": [
          "planner"
        ],
        "summary": "Get planner",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "$select",
            "in": "Query",
            "description": "Select properties to be returned",
            "type": "array",
            "items": {
              "enum": [
                "id"
              ],
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "Query",
            "description": "Expand related entities",
            "type": "array",
            "items": {
              "enum": [
                "*",
                "tasks",
                "plans",
                "buckets"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved entity",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      },
      "patch": {
        "tags": [
          "planner"
        ],
        "summary": "Update planner",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New property values",
            "schema": {
              "$ref": "#/definitions/microsoft.graph.planner"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "default": {
            "$ref": "#/responses/error"
          }
        }
      }
    }
  },
  "definitions": {
    "microsoft.graph.entity": {
      "title": "entity",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.directoryObject": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "directoryObject",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.device": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "device",
          "type": "object",
          "properties": {
            "accountEnabled": {
              "type": "boolean"
            },
            "alternativeSecurityIds": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.alternativeSecurityId"
              }
            },
            "approximateLastSignInDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "deviceId": {
              "type": "string"
            },
            "deviceMetadata": {
              "type": "string"
            },
            "deviceVersion": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "displayName": {
              "type": "string"
            },
            "isCompliant": {
              "type": "boolean"
            },
            "isManaged": {
              "type": "boolean"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "operatingSystem": {
              "type": "string"
            },
            "operatingSystemVersion": {
              "type": "string"
            },
            "physicalIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "trustType": {
              "type": "string"
            },
            "registeredOwners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "registeredUsers": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.alternativeSecurityId": {
      "title": "alternativeSecurityId",
      "type": "object",
      "properties": {
        "type": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "identityProvider": {
          "type": "string"
        },
        "key": {
          "format": "base64url",
          "type": "string"
        }
      }
    },
    "microsoft.graph.extension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "extension",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.directoryRole": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "directoryRole",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "roleTemplateId": {
              "type": "string"
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.directoryRoleTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "directoryRoleTemplate",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.domain": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "domain",
          "type": "object",
          "properties": {
            "authenticationType": {
              "type": "string"
            },
            "availabilityStatus": {
              "type": "string"
            },
            "isAdminManaged": {
              "type": "boolean"
            },
            "isDefault": {
              "type": "boolean"
            },
            "isInitial": {
              "type": "boolean"
            },
            "isRoot": {
              "type": "boolean"
            },
            "isVerified": {
              "type": "boolean"
            },
            "supportedServices": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "state": { },
            "serviceConfigurationRecords": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
              }
            },
            "verificationDnsRecords": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
              }
            },
            "domainNameReferences": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.domainState": {
      "title": "domainState",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "operation": {
          "type": "string"
        },
        "lastActionDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.domainDnsRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "domainDnsRecord",
          "type": "object",
          "properties": {
            "isOptional": {
              "type": "boolean"
            },
            "label": {
              "type": "string"
            },
            "recordType": {
              "type": "string"
            },
            "supportedService": {
              "type": "string"
            },
            "ttl": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsCnameRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsCnameRecord",
          "type": "object",
          "properties": {
            "canonicalName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsMxRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsMxRecord",
          "type": "object",
          "properties": {
            "mailExchange": {
              "type": "string"
            },
            "preference": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsSrvRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsSrvRecord",
          "type": "object",
          "properties": {
            "nameTarget": {
              "type": "string"
            },
            "port": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "priority": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "protocol": {
              "type": "string"
            },
            "service": {
              "type": "string"
            },
            "weight": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsTxtRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsTxtRecord",
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.domainDnsUnavailableRecord": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.domainDnsRecord"
        },
        {
          "title": "domainDnsUnavailableRecord",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.licenseDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "licenseDetails",
          "type": "object",
          "properties": {
            "servicePlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.servicePlanInfo"
              }
            },
            "skuId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "skuPartNumber": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.servicePlanInfo": {
      "title": "servicePlanInfo",
      "type": "object",
      "properties": {
        "servicePlanId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        },
        "servicePlanName": {
          "type": "string"
        },
        "provisioningStatus": {
          "type": "string"
        },
        "appliesTo": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.group": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "group",
          "type": "object",
          "properties": {
            "classification": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "groupTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mail": {
              "type": "string"
            },
            "mailEnabled": {
              "type": "boolean"
            },
            "mailNickname": {
              "type": "string"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesSecurityIdentifier": {
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "proxyAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "securityEnabled": {
              "type": "boolean"
            },
            "visibility": {
              "type": "string"
            },
            "allowExternalSenders": {
              "type": "boolean"
            },
            "autoSubscribeNewMembers": {
              "type": "boolean"
            },
            "isSubscribedByMail": {
              "type": "boolean"
            },
            "unseenCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "memberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "createdOnBehalfOf": { },
            "owners": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "settings": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.groupSetting"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "threads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversationThread"
              }
            },
            "calendar": { },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "conversations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversation"
              }
            },
            "photo": { },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.profilePhoto"
              }
            },
            "acceptedSenders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "rejectedSenders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "drive": { },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "sites": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.site"
              }
            },
            "planner": { },
            "onenote": { }
          }
        }
      ]
    },
    "microsoft.graph.groupSetting": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "groupSetting",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "templateId": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.settingValue"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.conversationThread": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "conversationThread",
          "type": "object",
          "properties": {
            "toRecipients": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.recipient"
              }
            },
            "topic": {
              "type": "string"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "lastDeliveredDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "uniqueSenders": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ccRecipients": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.recipient"
              }
            },
            "preview": {
              "type": "string"
            },
            "isLocked": {
              "type": "boolean"
            },
            "posts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.post"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.calendar": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "calendar",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "color": { },
            "changeKey": {
              "type": "string"
            },
            "canShare": {
              "type": "boolean"
            },
            "canViewPrivateItems": {
              "type": "boolean"
            },
            "canEdit": {
              "type": "boolean"
            },
            "owner": { },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.outlookItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "outlookItem",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "changeKey": {
              "type": "string"
            },
            "categories": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.event": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "event",
          "type": "object",
          "properties": {
            "originalStartTimeZone": {
              "type": "string"
            },
            "originalEndTimeZone": {
              "type": "string"
            },
            "responseStatus": { },
            "iCalUId": {
              "type": "string"
            },
            "reminderMinutesBeforeStart": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "isReminderOn": {
              "type": "boolean"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "subject": {
              "type": "string"
            },
            "body": { },
            "bodyPreview": {
              "type": "string"
            },
            "importance": { },
            "sensitivity": { },
            "start": { },
            "originalStart": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "end": { },
            "location": { },
            "isAllDay": {
              "type": "boolean"
            },
            "isCancelled": {
              "type": "boolean"
            },
            "isOrganizer": {
              "type": "boolean"
            },
            "recurrence": { },
            "responseRequested": {
              "type": "boolean"
            },
            "seriesMasterId": {
              "type": "string"
            },
            "showAs": { },
            "type": { },
            "attendees": {
              "type": "array",
              "items": { }
            },
            "organizer": { },
            "webLink": {
              "type": "string"
            },
            "onlineMeetingUrl": {
              "type": "string"
            },
            "calendar": { },
            "instances": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.conversation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "conversation",
          "type": "object",
          "properties": {
            "topic": {
              "type": "string"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "lastDeliveredDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "uniqueSenders": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "preview": {
              "type": "string"
            },
            "threads": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.conversationThread"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.profilePhoto": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "profilePhoto",
          "type": "object",
          "properties": {
            "height": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "width": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            }
          }
        }
      ]
    },
    "microsoft.graph.baseItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "baseItem",
          "type": "object",
          "properties": {
            "createdBy": { },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "eTag": {
              "type": "string"
            },
            "lastModifiedBy": { },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "parentReference": { },
            "webUrl": {
              "type": "string"
            },
            "createdByUser": { },
            "lastModifiedByUser": { }
          }
        }
      ]
    },
    "microsoft.graph.drive": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "drive",
          "type": "object",
          "properties": {
            "driveType": {
              "type": "string"
            },
            "owner": { },
            "quota": { },
            "sharePointIds": { },
            "system": { },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "list": { },
            "root": { },
            "special": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.site": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "site",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "root": { },
            "sharepointIds": { },
            "siteCollection": { },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnDefinition"
              }
            },
            "contentTypes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contentType"
              }
            },
            "drive": { },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.baseItem"
              }
            },
            "lists": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.list"
              }
            },
            "sites": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.site"
              }
            },
            "onenote": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerGroup",
          "type": "object",
          "properties": {
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.onenote": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "onenote",
          "type": "object",
          "properties": {
            "notebooks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.notebook"
              }
            },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            },
            "pages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenotePage"
              }
            },
            "resources": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteResource"
              }
            },
            "operations": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteOperation"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.contract": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "contract",
          "type": "object",
          "properties": {
            "contractType": {
              "type": "string"
            },
            "customerId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "defaultDomainName": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.subscribedSku": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "subscribedSku",
          "type": "object",
          "properties": {
            "capabilityStatus": {
              "type": "string"
            },
            "consumedUnits": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "prepaidUnits": { },
            "servicePlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.servicePlanInfo"
              }
            },
            "skuId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "skuPartNumber": {
              "type": "string"
            },
            "appliesTo": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.licenseUnitsDetail": {
      "title": "licenseUnitsDetail",
      "type": "object",
      "properties": {
        "enabled": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "suspended": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "warning": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.organization": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "organization",
          "type": "object",
          "properties": {
            "assignedPlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.assignedPlan"
              }
            },
            "businessPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "city": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "countryLetterCode": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "marketingNotificationEmails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "postalCode": {
              "type": "string"
            },
            "preferredLanguage": {
              "type": "string"
            },
            "provisionedPlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.provisionedPlan"
              }
            },
            "securityComplianceNotificationMails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "securityComplianceNotificationPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "state": {
              "type": "string"
            },
            "street": {
              "type": "string"
            },
            "technicalNotificationMails": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "verifiedDomains": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.verifiedDomain"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.assignedPlan": {
      "title": "assignedPlan",
      "type": "object",
      "properties": {
        "assignedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "capabilityStatus": {
          "type": "string"
        },
        "service": {
          "type": "string"
        },
        "servicePlanId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.provisionedPlan": {
      "title": "provisionedPlan",
      "type": "object",
      "properties": {
        "capabilityStatus": {
          "type": "string"
        },
        "provisioningStatus": {
          "type": "string"
        },
        "service": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.verifiedDomain": {
      "title": "verifiedDomain",
      "type": "object",
      "properties": {
        "capabilities": {
          "type": "string"
        },
        "isDefault": {
          "type": "boolean"
        },
        "isInitial": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.user": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "user",
          "type": "object",
          "properties": {
            "accountEnabled": {
              "type": "boolean"
            },
            "assignedLicenses": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.assignedLicense"
              }
            },
            "assignedPlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.assignedPlan"
              }
            },
            "businessPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "city": {
              "type": "string"
            },
            "companyName": {
              "type": "string"
            },
            "country": {
              "type": "string"
            },
            "department": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "givenName": {
              "type": "string"
            },
            "imAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jobTitle": {
              "type": "string"
            },
            "mail": {
              "type": "string"
            },
            "mailNickname": {
              "type": "string"
            },
            "mobilePhone": {
              "type": "string"
            },
            "onPremisesImmutableId": {
              "type": "string"
            },
            "onPremisesLastSyncDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "onPremisesSecurityIdentifier": {
              "type": "string"
            },
            "onPremisesSyncEnabled": {
              "type": "boolean"
            },
            "passwordPolicies": {
              "type": "string"
            },
            "passwordProfile": { },
            "officeLocation": {
              "type": "string"
            },
            "postalCode": {
              "type": "string"
            },
            "preferredLanguage": {
              "type": "string"
            },
            "provisionedPlans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.provisionedPlan"
              }
            },
            "proxyAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "state": {
              "type": "string"
            },
            "streetAddress": {
              "type": "string"
            },
            "surname": {
              "type": "string"
            },
            "usageLocation": {
              "type": "string"
            },
            "userPrincipalName": {
              "type": "string"
            },
            "userType": {
              "type": "string"
            },
            "mailboxSettings": { },
            "aboutMe": {
              "type": "string"
            },
            "birthday": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hireDate": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "interests": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mySite": {
              "type": "string"
            },
            "pastProjects": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "preferredName": {
              "type": "string"
            },
            "responsibilities": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "schools": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "skills": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ownedDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "registeredDevices": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "manager": { },
            "directReports": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "memberOf": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "createdObjects": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "ownedObjects": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.directoryObject"
              }
            },
            "licenseDetails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.licenseDetails"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.message"
              }
            },
            "mailFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailFolder"
              }
            },
            "calendar": { },
            "calendars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendar"
              }
            },
            "calendarGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendarGroup"
              }
            },
            "calendarView": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "events": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.event"
              }
            },
            "people": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.person"
              }
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contact"
              }
            },
            "contactFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contactFolder"
              }
            },
            "inferenceClassification": { },
            "photo": { },
            "photos": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.profilePhoto"
              }
            },
            "drive": { },
            "drives": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.drive"
              }
            },
            "planner": { },
            "onenote": { }
          }
        }
      ]
    },
    "microsoft.graph.assignedLicense": {
      "title": "assignedLicense",
      "type": "object",
      "properties": {
        "disabledPlans": {
          "type": "array",
          "items": {
            "format": "uuid",
            "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
            "type": "string"
          }
        },
        "skuId": {
          "format": "uuid",
          "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.passwordProfile": {
      "title": "passwordProfile",
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "forceChangePasswordNextSignIn": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.mailboxSettings": {
      "title": "mailboxSettings",
      "type": "object",
      "properties": {
        "automaticRepliesSetting": { },
        "archiveFolder": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        },
        "language": { }
      }
    },
    "microsoft.graph.automaticRepliesSetting": {
      "title": "automaticRepliesSetting",
      "type": "object",
      "properties": {
        "status": { },
        "externalAudience": { },
        "scheduledStartDateTime": { },
        "scheduledEndDateTime": { },
        "internalReplyMessage": {
          "type": "string"
        },
        "externalReplyMessage": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.dateTimeTimeZone": {
      "title": "dateTimeTimeZone",
      "type": "object",
      "properties": {
        "dateTime": {
          "type": "string"
        },
        "timeZone": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.localeInfo": {
      "title": "localeInfo",
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.message": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "message",
          "type": "object",
          "properties": {
            "receivedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "sentDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "internetMessageId": {
              "type": "string"
            },
            "subject": {
              "type": "string"
            },
            "body": { },
            "bodyPreview": {
              "type": "string"
            },
            "importance": { },
            "parentFolderId": {
              "type": "string"
            },
            "sender": { },
            "from": { },
            "toRecipients": {
              "type": "array",
              "items": { }
            },
            "ccRecipients": {
              "type": "array",
              "items": { }
            },
            "bccRecipients": {
              "type": "array",
              "items": { }
            },
            "replyTo": {
              "type": "array",
              "items": { }
            },
            "conversationId": {
              "type": "string"
            },
            "uniqueBody": { },
            "isDeliveryReceiptRequested": {
              "type": "boolean"
            },
            "isReadReceiptRequested": {
              "type": "boolean"
            },
            "isRead": {
              "type": "boolean"
            },
            "isDraft": {
              "type": "boolean"
            },
            "webLink": {
              "type": "string"
            },
            "inferenceClassification": { },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.mailFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "mailFolder",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "parentFolderId": {
              "type": "string"
            },
            "childFolderCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "unreadItemCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "totalItemCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "messages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.message"
              }
            },
            "childFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.mailFolder"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.calendarGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "calendarGroup",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "classId": {
              "format": "uuid",
              "pattern": "^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$",
              "type": "string"
            },
            "changeKey": {
              "type": "string"
            },
            "calendars": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.calendar"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.person": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "person",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "givenName": {
              "type": "string"
            },
            "surname": {
              "type": "string"
            },
            "birthday": {
              "type": "string"
            },
            "personNotes": {
              "type": "string"
            },
            "isFavorite": {
              "type": "boolean"
            },
            "scoredEmailAddresses": {
              "type": "array",
              "items": { }
            },
            "phones": {
              "type": "array",
              "items": { }
            },
            "postalAddresses": {
              "type": "array",
              "items": { }
            },
            "websites": {
              "type": "array",
              "items": { }
            },
            "jobTitle": {
              "type": "string"
            },
            "companyName": {
              "type": "string"
            },
            "yomiCompany": {
              "type": "string"
            },
            "department": {
              "type": "string"
            },
            "officeLocation": {
              "type": "string"
            },
            "profession": {
              "type": "string"
            },
            "personType": { },
            "userPrincipalName": {
              "type": "string"
            },
            "imAddress": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.contact": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "contact",
          "type": "object",
          "properties": {
            "parentFolderId": {
              "type": "string"
            },
            "birthday": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "fileAs": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "givenName": {
              "type": "string"
            },
            "initials": {
              "type": "string"
            },
            "middleName": {
              "type": "string"
            },
            "nickName": {
              "type": "string"
            },
            "surname": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "yomiGivenName": {
              "type": "string"
            },
            "yomiSurname": {
              "type": "string"
            },
            "yomiCompanyName": {
              "type": "string"
            },
            "generation": {
              "type": "string"
            },
            "emailAddresses": {
              "type": "array",
              "items": { }
            },
            "imAddresses": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "jobTitle": {
              "type": "string"
            },
            "companyName": {
              "type": "string"
            },
            "department": {
              "type": "string"
            },
            "officeLocation": {
              "type": "string"
            },
            "profession": {
              "type": "string"
            },
            "businessHomePage": {
              "type": "string"
            },
            "assistantName": {
              "type": "string"
            },
            "manager": {
              "type": "string"
            },
            "homePhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "mobilePhone": {
              "type": "string"
            },
            "businessPhones": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "homeAddress": { },
            "businessAddress": { },
            "otherAddress": { },
            "spouseName": {
              "type": "string"
            },
            "personalNotes": {
              "type": "string"
            },
            "children": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            },
            "photo": { }
          }
        }
      ]
    },
    "microsoft.graph.contactFolder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "contactFolder",
          "type": "object",
          "properties": {
            "parentFolderId": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "contacts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contact"
              }
            },
            "childFolders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contactFolder"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.inferenceClassification": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "inferenceClassification",
          "type": "object",
          "properties": {
            "overrides": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.inferenceClassificationOverride"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerUser": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerUser",
          "type": "object",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            },
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.settingValue": {
      "title": "settingValue",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.groupSettingTemplate": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.directoryObject"
        },
        {
          "title": "groupSettingTemplate",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "description": {
              "type": "string"
            },
            "values": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.settingTemplateValue"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.settingTemplateValue": {
      "title": "settingTemplateValue",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "defaultValue": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.ComplexExtensionValue": {
      "title": "ComplexExtensionValue",
      "type": "object"
    },
    "microsoft.graph.schemaExtension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "schemaExtension",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "targetTypes": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "properties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extensionSchemaProperty"
              }
            },
            "status": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.extensionSchemaProperty": {
      "title": "extensionSchemaProperty",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.attachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "attachment",
          "type": "object",
          "properties": {
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "contentType": {
              "type": "string"
            },
            "size": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "isInline": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.recipient": {
      "title": "recipient",
      "type": "object",
      "properties": {
        "emailAddress": { }
      }
    },
    "microsoft.graph.emailAddress": {
      "title": "emailAddress",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.attendeeBase": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.recipient"
        },
        {
          "title": "attendeeBase",
          "type": "object",
          "properties": {
            "type": { }
          }
        }
      ]
    },
    "microsoft.graph.meetingTimeSuggestionsResult": {
      "title": "meetingTimeSuggestionsResult",
      "type": "object",
      "properties": {
        "meetingTimeSuggestions": {
          "type": "array",
          "items": { }
        },
        "emptySuggestionsReason": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.meetingTimeSuggestion": {
      "title": "meetingTimeSuggestion",
      "type": "object",
      "properties": {
        "meetingTimeSlot": { },
        "confidence": {
          "format": "double"
        },
        "organizerAvailability": { },
        "attendeeAvailability": {
          "type": "array",
          "items": { }
        },
        "locations": {
          "type": "array",
          "items": { }
        },
        "suggestionReason": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.timeSlot": {
      "title": "timeSlot",
      "type": "object",
      "properties": {
        "start": { },
        "end": { }
      }
    },
    "microsoft.graph.attendeeAvailability": {
      "title": "attendeeAvailability",
      "type": "object",
      "properties": {
        "attendee": { },
        "availability": { }
      }
    },
    "microsoft.graph.location": {
      "title": "location",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "locationEmailAddress": {
          "type": "string"
        },
        "address": { }
      }
    },
    "microsoft.graph.physicalAddress": {
      "title": "physicalAddress",
      "type": "object",
      "properties": {
        "street": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "countryOrRegion": {
          "type": "string"
        },
        "postalCode": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.locationConstraint": {
      "title": "locationConstraint",
      "type": "object",
      "properties": {
        "isRequired": {
          "type": "boolean"
        },
        "suggestLocation": {
          "type": "boolean"
        },
        "locations": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.locationConstraintItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.location"
        },
        {
          "title": "locationConstraintItem",
          "type": "object",
          "properties": {
            "resolveAvailability": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.timeConstraint": {
      "title": "timeConstraint",
      "type": "object",
      "properties": {
        "activityDomain": { },
        "timeslots": {
          "type": "array",
          "items": { }
        }
      }
    },
    "microsoft.graph.reminder": {
      "title": "reminder",
      "type": "object",
      "properties": {
        "eventId": {
          "type": "string"
        },
        "eventStartTime": { },
        "eventEndTime": { },
        "changeKey": {
          "type": "string"
        },
        "eventSubject": {
          "type": "string"
        },
        "eventLocation": { },
        "eventWebLink": {
          "type": "string"
        },
        "reminderFireTime": { }
      }
    },
    "microsoft.graph.singleValueLegacyExtendedProperty": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "singleValueLegacyExtendedProperty",
          "type": "object",
          "properties": {
            "value": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.multiValueLegacyExtendedProperty": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "multiValueLegacyExtendedProperty",
          "type": "object",
          "properties": {
            "value": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.itemBody": {
      "title": "itemBody",
      "type": "object",
      "properties": {
        "contentType": { },
        "content": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.fileAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "fileAttachment",
          "type": "object",
          "properties": {
            "contentId": {
              "type": "string"
            },
            "contentLocation": {
              "type": "string"
            },
            "contentBytes": {
              "format": "base64url",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.itemAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "itemAttachment",
          "type": "object",
          "properties": {
            "item": { }
          }
        }
      ]
    },
    "microsoft.graph.responseStatus": {
      "title": "responseStatus",
      "type": "object",
      "properties": {
        "response": { },
        "time": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.patternedRecurrence": {
      "title": "patternedRecurrence",
      "type": "object",
      "properties": {
        "pattern": { },
        "range": { }
      }
    },
    "microsoft.graph.recurrencePattern": {
      "title": "recurrencePattern",
      "type": "object",
      "properties": {
        "type": { },
        "interval": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "month": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "dayOfMonth": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "daysOfWeek": {
          "type": "array",
          "items": { }
        },
        "firstDayOfWeek": { },
        "index": { }
      }
    },
    "microsoft.graph.recurrenceRange": {
      "title": "recurrenceRange",
      "type": "object",
      "properties": {
        "type": { },
        "startDate": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "endDate": {
          "format": "date",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$",
          "type": "string"
        },
        "recurrenceTimeZone": {
          "type": "string"
        },
        "numberOfOccurrences": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.attendee": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attendeeBase"
        },
        {
          "title": "attendee",
          "type": "object",
          "properties": {
            "status": { }
          }
        }
      ]
    },
    "microsoft.graph.eventMessage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.message"
        },
        {
          "title": "eventMessage",
          "type": "object",
          "properties": {
            "meetingMessageType": { },
            "event": { }
          }
        }
      ]
    },
    "microsoft.graph.referenceAttachment": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.attachment"
        },
        {
          "title": "referenceAttachment",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.openTypeExtension": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.extension"
        },
        {
          "title": "openTypeExtension",
          "type": "object",
          "properties": {
            "extensionName": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.post": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.outlookItem"
        },
        {
          "title": "post",
          "type": "object",
          "properties": {
            "body": { },
            "receivedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hasAttachments": {
              "type": "boolean"
            },
            "from": {
              "$ref": "#/definitions/microsoft.graph.recipient"
            },
            "sender": { },
            "conversationThreadId": {
              "type": "string"
            },
            "newParticipants": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.recipient"
              }
            },
            "conversationId": {
              "type": "string"
            },
            "extensions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.extension"
              }
            },
            "inReplyTo": { },
            "attachments": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.attachment"
              }
            },
            "singleValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.singleValueLegacyExtendedProperty"
              }
            },
            "multiValueExtendedProperties": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.multiValueLegacyExtendedProperty"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.inferenceClassificationOverride": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "inferenceClassificationOverride",
          "type": "object",
          "properties": {
            "classifyAs": { },
            "senderEmailAddress": { }
          }
        }
      ]
    },
    "microsoft.graph.scoredEmailAddress": {
      "title": "scoredEmailAddress",
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "relevanceScore": {
          "format": "double"
        }
      }
    },
    "microsoft.graph.phone": {
      "title": "phone",
      "type": "object",
      "properties": {
        "type": { },
        "number": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "language": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.website": {
      "title": "website",
      "type": "object",
      "properties": {
        "type": { },
        "address": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.personType": {
      "title": "personType",
      "type": "object",
      "properties": {
        "class": {
          "type": "string"
        },
        "subclass": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.identitySet": {
      "title": "identitySet",
      "type": "object",
      "properties": {
        "application": { },
        "device": { },
        "user": { }
      }
    },
    "microsoft.graph.identity": {
      "title": "identity",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "id": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.itemReference": {
      "title": "itemReference",
      "type": "object",
      "properties": {
        "driveId": {
          "type": "string"
        },
        "driveType": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "path": {
          "type": "string"
        },
        "shareId": {
          "type": "string"
        },
        "sharepointIds": { }
      }
    },
    "microsoft.graph.sharepointIds": {
      "title": "sharepointIds",
      "type": "object",
      "properties": {
        "listId": {
          "type": "string"
        },
        "listItemId": {
          "type": "string"
        },
        "listItemUniqueId": {
          "type": "string"
        },
        "siteId": {
          "type": "string"
        },
        "siteUrl": {
          "type": "string"
        },
        "webId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.columnDefinition": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "columnDefinition",
          "type": "object",
          "properties": {
            "boolean": { },
            "calculated": { },
            "choice": { },
            "columnGroup": {
              "type": "string"
            },
            "currency": { },
            "dateTime": { },
            "defaultValue": { },
            "description": {
              "type": "string"
            },
            "displayName": {
              "type": "string"
            },
            "enforceUniqueValues": {
              "type": "boolean"
            },
            "hidden": {
              "type": "boolean"
            },
            "indexed": {
              "type": "boolean"
            },
            "lookup": { },
            "name": {
              "type": "string"
            },
            "number": { },
            "personOrGroup": { },
            "readOnly": {
              "type": "boolean"
            },
            "required": {
              "type": "boolean"
            },
            "text": { }
          }
        }
      ]
    },
    "microsoft.graph.booleanColumn": {
      "title": "booleanColumn",
      "type": "object"
    },
    "microsoft.graph.calculatedColumn": {
      "title": "calculatedColumn",
      "type": "object",
      "properties": {
        "format": {
          "type": "string"
        },
        "formula": {
          "type": "string"
        },
        "outputType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.choiceColumn": {
      "title": "choiceColumn",
      "type": "object",
      "properties": {
        "allowTextEntry": {
          "type": "boolean"
        },
        "choices": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayAs": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.currencyColumn": {
      "title": "currencyColumn",
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.dateTimeColumn": {
      "title": "dateTimeColumn",
      "type": "object",
      "properties": {
        "displayAs": {
          "type": "string"
        },
        "format": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.defaultColumnValue": {
      "title": "defaultColumnValue",
      "type": "object",
      "properties": {
        "formula": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.lookupColumn": {
      "title": "lookupColumn",
      "type": "object",
      "properties": {
        "allowMultipleValues": {
          "type": "boolean"
        },
        "allowUnlimitedLength": {
          "type": "boolean"
        },
        "columnName": {
          "type": "string"
        },
        "listId": {
          "type": "string"
        },
        "primaryLookupColumnId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.numberColumn": {
      "title": "numberColumn",
      "type": "object",
      "properties": {
        "decimalPlaces": {
          "type": "string"
        },
        "displayAs": {
          "type": "string"
        },
        "maximum": {
          "format": "double"
        },
        "minimum": {
          "format": "double"
        }
      }
    },
    "microsoft.graph.personOrGroupColumn": {
      "title": "personOrGroupColumn",
      "type": "object",
      "properties": {
        "allowMultipleSelection": {
          "type": "boolean"
        },
        "displayAs": {
          "type": "string"
        },
        "chooseFromType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.textColumn": {
      "title": "textColumn",
      "type": "object",
      "properties": {
        "allowMultipleLines": {
          "type": "boolean"
        },
        "appendChangesToExistingText": {
          "type": "boolean"
        },
        "linesForEditing": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "maxLength": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "textType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.columnLink": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "columnLink",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.contentType": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "contentType",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "group": {
              "type": "string"
            },
            "hidden": {
              "type": "boolean"
            },
            "inheritedFrom": { },
            "name": {
              "type": "string"
            },
            "order": { },
            "parentId": {
              "type": "string"
            },
            "readOnly": {
              "type": "boolean"
            },
            "sealed": {
              "type": "boolean"
            },
            "columnLinks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnLink"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.contentTypeOrder": {
      "title": "contentTypeOrder",
      "type": "object",
      "properties": {
        "default": {
          "type": "boolean"
        },
        "position": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.quota": {
      "title": "quota",
      "type": "object",
      "properties": {
        "deleted": {
          "format": "int64"
        },
        "remaining": {
          "format": "int64"
        },
        "state": {
          "type": "string"
        },
        "total": {
          "format": "int64"
        },
        "used": {
          "format": "int64"
        }
      }
    },
    "microsoft.graph.systemFacet": {
      "title": "systemFacet",
      "type": "object"
    },
    "microsoft.graph.driveItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "driveItem",
          "type": "object",
          "properties": {
            "audio": { },
            "content": {
              "format": "base64url",
              "type": "string"
            },
            "cTag": {
              "type": "string"
            },
            "deleted": { },
            "file": { },
            "fileSystemInfo": { },
            "folder": { },
            "image": { },
            "location": { },
            "package": { },
            "photo": { },
            "remoteItem": { },
            "root": { },
            "searchResult": { },
            "shared": { },
            "sharepointIds": { },
            "size": {
              "format": "int64"
            },
            "specialFolder": { },
            "video": { },
            "webDavUrl": {
              "type": "string"
            },
            "children": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "listItem": { },
            "permissions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.permission"
              }
            },
            "thumbnails": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.thumbnailSet"
              }
            },
            "workbook": { }
          }
        }
      ]
    },
    "microsoft.graph.list": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "list",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "list": { },
            "sharepointIds": { },
            "system": { },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.columnDefinition"
              }
            },
            "contentTypes": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.contentType"
              }
            },
            "drive": { },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.listItem"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.audio": {
      "title": "audio",
      "type": "object",
      "properties": {
        "album": {
          "type": "string"
        },
        "albumArtist": {
          "type": "string"
        },
        "artist": {
          "type": "string"
        },
        "bitrate": {
          "format": "int64"
        },
        "composers": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "disc": {
          "format": "int16",
          "maximum": 32767,
          "minimum": -32768,
          "type": "integer"
        },
        "discCount": {
          "format": "int16",
          "maximum": 32767,
          "minimum": -32768,
          "type": "integer"
        },
        "duration": {
          "format": "int64"
        },
        "genre": {
          "type": "string"
        },
        "hasDrm": {
          "type": "boolean"
        },
        "isVariableBitrate": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "track": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "trackCount": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "year": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.deleted": {
      "title": "deleted",
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.file": {
      "title": "file",
      "type": "object",
      "properties": {
        "hashes": { },
        "mimeType": {
          "type": "string"
        },
        "processingMetadata": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.hashes": {
      "title": "hashes",
      "type": "object",
      "properties": {
        "crc32Hash": {
          "type": "string"
        },
        "quickXorHash": {
          "type": "string"
        },
        "sha1Hash": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.fileSystemInfo": {
      "title": "fileSystemInfo",
      "type": "object",
      "properties": {
        "createdDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastAccessedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.folder": {
      "title": "folder",
      "type": "object",
      "properties": {
        "childCount": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "view": { }
      }
    },
    "microsoft.graph.folderView": {
      "title": "folderView",
      "type": "object",
      "properties": {
        "sortBy": {
          "type": "string"
        },
        "sortOrder": {
          "type": "string"
        },
        "viewType": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.image": {
      "title": "image",
      "type": "object",
      "properties": {
        "height": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.geoCoordinates": {
      "title": "geoCoordinates",
      "type": "object",
      "properties": {
        "altitude": {
          "format": "double"
        },
        "latitude": {
          "format": "double"
        },
        "longitude": {
          "format": "double"
        }
      }
    },
    "microsoft.graph.package": {
      "title": "package",
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.photo": {
      "title": "photo",
      "type": "object",
      "properties": {
        "cameraMake": {
          "type": "string"
        },
        "cameraModel": {
          "type": "string"
        },
        "exposureDenominator": {
          "format": "double"
        },
        "exposureNumerator": {
          "format": "double"
        },
        "fNumber": {
          "format": "double"
        },
        "focalLength": {
          "format": "double"
        },
        "iso": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "takenDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.remoteItem": {
      "title": "remoteItem",
      "type": "object",
      "properties": {
        "createdBy": { },
        "createdDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "file": { },
        "fileSystemInfo": { },
        "folder": { },
        "id": {
          "type": "string"
        },
        "lastModifiedBy": { },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "package": { },
        "parentReference": { },
        "shared": { },
        "sharepointIds": { },
        "size": {
          "format": "int64"
        },
        "specialFolder": { },
        "webDavUrl": {
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.shared": {
      "title": "shared",
      "type": "object",
      "properties": {
        "owner": { },
        "scope": {
          "type": "string"
        },
        "sharedBy": { },
        "sharedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.specialFolder": {
      "title": "specialFolder",
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.root": {
      "title": "root",
      "type": "object"
    },
    "microsoft.graph.searchResult": {
      "title": "searchResult",
      "type": "object",
      "properties": {
        "onClickTelemetryUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.video": {
      "title": "video",
      "type": "object",
      "properties": {
        "audioBitsPerSample": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "audioChannels": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "audioFormat": {
          "type": "string"
        },
        "audioSamplesPerSecond": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "bitrate": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "duration": {
          "format": "int64"
        },
        "fourCC": {
          "type": "string"
        },
        "frameRate": {
          "format": "double"
        },
        "height": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "width": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.listItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "listItem",
          "type": "object",
          "properties": {
            "contentType": { },
            "sharepointIds": { },
            "driveItem": { },
            "fields": { }
          }
        }
      ]
    },
    "microsoft.graph.permission": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "permission",
          "type": "object",
          "properties": {
            "grantedTo": { },
            "inheritedFrom": { },
            "invitation": { },
            "link": { },
            "roles": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "shareId": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.thumbnailSet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "thumbnailSet",
          "type": "object",
          "properties": {
            "large": { },
            "medium": { },
            "small": { },
            "source": { }
          }
        }
      ]
    },
    "microsoft.graph.workbook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbook",
          "type": "object",
          "properties": {
            "application": { },
            "names": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookNamedItem"
              }
            },
            "tables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTable"
              }
            },
            "worksheets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookWorksheet"
              }
            },
            "functions": { }
          }
        }
      ]
    },
    "microsoft.graph.fieldValueSet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "fieldValueSet",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.listInfo": {
      "title": "listInfo",
      "type": "object",
      "properties": {
        "contentTypesEnabled": {
          "type": "boolean"
        },
        "hidden": {
          "type": "boolean"
        },
        "template": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.contentTypeInfo": {
      "title": "contentTypeInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.sharingInvitation": {
      "title": "sharingInvitation",
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "invitedBy": { },
        "redeemedBy": {
          "type": "string"
        },
        "signInRequired": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.sharingLink": {
      "title": "sharingLink",
      "type": "object",
      "properties": {
        "application": { },
        "scope": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "webUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.sharedDriveItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.baseItem"
        },
        {
          "title": "sharedDriveItem",
          "type": "object",
          "properties": {
            "owner": { },
            "driveItem": { },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.driveItem"
              }
            },
            "list": { },
            "listItem": { },
            "root": { },
            "site": { }
          }
        }
      ]
    },
    "microsoft.graph.siteCollection": {
      "title": "siteCollection",
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.thumbnail": {
      "title": "thumbnail",
      "type": "object",
      "properties": {
        "content": {
          "format": "base64url",
          "type": "string"
        },
        "height": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "sourceItemId": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "width": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        }
      }
    },
    "microsoft.graph.driveItemUploadableProperties": {
      "title": "driveItemUploadableProperties",
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "fileSystemInfo": { },
        "name": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.driveRecipient": {
      "title": "driveRecipient",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "objectId": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.uploadSession": {
      "title": "uploadSession",
      "type": "object",
      "properties": {
        "expirationDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "nextExpectedRanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "uploadUrl": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.workbookApplication": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookApplication",
          "type": "object",
          "properties": {
            "calculationMode": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookNamedItem": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookNamedItem",
          "type": "object",
          "properties": {
            "comment": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "scope": {
              "type": "string"
            },
            "type": {
              "type": "string"
            },
            "value": { },
            "visible": {
              "type": "boolean"
            },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookTable": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTable",
          "type": "object",
          "properties": {
            "highlightFirstColumn": {
              "type": "boolean"
            },
            "highlightLastColumn": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "showBandedColumns": {
              "type": "boolean"
            },
            "showBandedRows": {
              "type": "boolean"
            },
            "showFilterButton": {
              "type": "boolean"
            },
            "showHeaders": {
              "type": "boolean"
            },
            "showTotals": {
              "type": "boolean"
            },
            "style": {
              "type": "string"
            },
            "columns": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTableColumn"
              }
            },
            "rows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTableRow"
              }
            },
            "sort": { },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookWorksheet": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookWorksheet",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "position": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "visibility": {
              "type": "string"
            },
            "charts": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChart"
              }
            },
            "names": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookNamedItem"
              }
            },
            "pivotTables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookPivotTable"
              }
            },
            "protection": { },
            "tables": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookTable"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookFunctions": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFunctions",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.workbookSessionInfo": {
      "title": "workbookSessionInfo",
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "persistChanges": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.Json": {
      "title": "Json",
      "type": "object"
    },
    "microsoft.graph.workbookChart": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChart",
          "type": "object",
          "properties": {
            "height": {
              "format": "double"
            },
            "left": {
              "format": "double"
            },
            "name": {
              "type": "string"
            },
            "top": {
              "format": "double"
            },
            "width": {
              "format": "double"
            },
            "axes": { },
            "dataLabels": { },
            "format": { },
            "legend": { },
            "series": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChartSeries"
              }
            },
            "title": { },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxes": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxes",
          "type": "object",
          "properties": {
            "categoryAxis": { },
            "seriesAxis": { },
            "valueAxis": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartDataLabels": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartDataLabels",
          "type": "object",
          "properties": {
            "position": {
              "type": "string"
            },
            "separator": {
              "type": "string"
            },
            "showBubbleSize": {
              "type": "boolean"
            },
            "showCategoryName": {
              "type": "boolean"
            },
            "showLegendKey": {
              "type": "boolean"
            },
            "showPercentage": {
              "type": "boolean"
            },
            "showSeriesName": {
              "type": "boolean"
            },
            "showValue": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAreaFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAreaFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartLegend": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLegend",
          "type": "object",
          "properties": {
            "overlay": {
              "type": "boolean"
            },
            "position": {
              "type": "string"
            },
            "visible": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartSeries": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartSeries",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "format": { },
            "points": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookChartPoint"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartTitle": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartTitle",
          "type": "object",
          "properties": {
            "overlay": {
              "type": "boolean"
            },
            "text": {
              "type": "string"
            },
            "visible": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartFill": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartFill",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.workbookChartFont": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartFont",
          "type": "object",
          "properties": {
            "bold": {
              "type": "boolean"
            },
            "color": {
              "type": "string"
            },
            "italic": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "size": {
              "format": "double"
            },
            "underline": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxis": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxis",
          "type": "object",
          "properties": {
            "majorUnit": { },
            "maximum": { },
            "minimum": { },
            "minorUnit": { },
            "format": { },
            "majorGridlines": { },
            "minorGridlines": { },
            "title": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxisFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisFormat",
          "type": "object",
          "properties": {
            "font": { },
            "line": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartGridlines": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartGridlines",
          "type": "object",
          "properties": {
            "visible": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxisTitle": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisTitle",
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            },
            "visible": {
              "type": "boolean"
            },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartLineFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLineFormat",
          "type": "object",
          "properties": {
            "color": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartAxisTitleFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartAxisTitleFormat",
          "type": "object",
          "properties": {
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartDataLabelFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartDataLabelFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartGridlinesFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartGridlinesFormat",
          "type": "object",
          "properties": {
            "line": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartLegendFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartLegendFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartPoint": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartPoint",
          "type": "object",
          "properties": {
            "value": { },
            "format": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartPointFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartPointFormat",
          "type": "object",
          "properties": {
            "fill": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartSeriesFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartSeriesFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "line": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookChartTitleFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookChartTitleFormat",
          "type": "object",
          "properties": {
            "fill": { },
            "font": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFilter",
          "type": "object",
          "properties": {
            "criteria": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookFilterCriteria": {
      "title": "workbookFilterCriteria",
      "type": "object",
      "properties": {
        "color": {
          "type": "string"
        },
        "criterion1": {
          "type": "string"
        },
        "criterion2": {
          "type": "string"
        },
        "dynamicCriteria": {
          "type": "string"
        },
        "filterOn": {
          "type": "string"
        },
        "icon": { },
        "operator": {
          "type": "string"
        },
        "values": { }
      }
    },
    "microsoft.graph.workbookIcon": {
      "title": "workbookIcon",
      "type": "object",
      "properties": {
        "index": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "set": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.workbookFormatProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFormatProtection",
          "type": "object",
          "properties": {
            "formulaHidden": {
              "type": "boolean"
            },
            "locked": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookFunctionResult": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookFunctionResult",
          "type": "object",
          "properties": {
            "error": {
              "type": "string"
            },
            "value": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookPivotTable": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookPivotTable",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookRange": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRange",
          "type": "object",
          "properties": {
            "address": {
              "type": "string"
            },
            "addressLocal": {
              "type": "string"
            },
            "cellCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "columnCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "columnHidden": {
              "type": "boolean"
            },
            "columnIndex": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "formulas": { },
            "formulasLocal": { },
            "formulasR1C1": { },
            "hidden": {
              "type": "boolean"
            },
            "numberFormat": { },
            "rowCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "rowHidden": {
              "type": "boolean"
            },
            "rowIndex": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "text": { },
            "valueTypes": { },
            "values": { },
            "format": { },
            "sort": { },
            "worksheet": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFormat",
          "type": "object",
          "properties": {
            "columnWidth": {
              "format": "double"
            },
            "horizontalAlignment": {
              "type": "string"
            },
            "rowHeight": {
              "format": "double"
            },
            "verticalAlignment": {
              "type": "string"
            },
            "wrapText": {
              "type": "boolean"
            },
            "borders": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookRangeBorder"
              }
            },
            "fill": { },
            "font": { },
            "protection": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeSort": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeSort",
          "type": "object"
        }
      ]
    },
    "microsoft.graph.workbookRangeBorder": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeBorder",
          "type": "object",
          "properties": {
            "color": {
              "type": "string"
            },
            "sideIndex": {
              "type": "string"
            },
            "style": {
              "type": "string"
            },
            "weight": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeFill": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFill",
          "type": "object",
          "properties": {
            "color": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeFont": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeFont",
          "type": "object",
          "properties": {
            "bold": {
              "type": "boolean"
            },
            "color": {
              "type": "string"
            },
            "italic": {
              "type": "boolean"
            },
            "name": {
              "type": "string"
            },
            "size": {
              "format": "double"
            },
            "underline": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookRangeView": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookRangeView",
          "type": "object",
          "properties": {
            "cellAddresses": { },
            "columnCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "formulas": { },
            "formulasLocal": { },
            "formulasR1C1": { },
            "index": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "numberFormat": { },
            "rowCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "text": { },
            "valueTypes": { },
            "values": { },
            "rows": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.workbookRangeView"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookTableColumn": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableColumn",
          "type": "object",
          "properties": {
            "index": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "values": { },
            "filter": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookTableRow": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableRow",
          "type": "object",
          "properties": {
            "index": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "values": { }
          }
        }
      ]
    },
    "microsoft.graph.workbookTableSort": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookTableSort",
          "type": "object",
          "properties": {
            "fields": {
              "type": "array",
              "items": { }
            },
            "matchCase": {
              "type": "boolean"
            },
            "method": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookSortField": {
      "title": "workbookSortField",
      "type": "object",
      "properties": {
        "ascending": {
          "type": "boolean"
        },
        "color": {
          "type": "string"
        },
        "dataOption": {
          "type": "string"
        },
        "icon": { },
        "key": {
          "format": "int32",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "type": "integer"
        },
        "sortOn": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.workbookWorksheetProtection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "workbookWorksheetProtection",
          "type": "object",
          "properties": {
            "options": { },
            "protected": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "microsoft.graph.workbookWorksheetProtectionOptions": {
      "title": "workbookWorksheetProtectionOptions",
      "type": "object",
      "properties": {
        "allowAutoFilter": {
          "type": "boolean"
        },
        "allowDeleteColumns": {
          "type": "boolean"
        },
        "allowDeleteRows": {
          "type": "boolean"
        },
        "allowFormatCells": {
          "type": "boolean"
        },
        "allowFormatColumns": {
          "type": "boolean"
        },
        "allowFormatRows": {
          "type": "boolean"
        },
        "allowInsertColumns": {
          "type": "boolean"
        },
        "allowInsertHyperlinks": {
          "type": "boolean"
        },
        "allowInsertRows": {
          "type": "boolean"
        },
        "allowPivotTables": {
          "type": "boolean"
        },
        "allowSort": {
          "type": "boolean"
        }
      }
    },
    "microsoft.graph.workbookFilterDatetime": {
      "title": "workbookFilterDatetime",
      "type": "object",
      "properties": {
        "date": {
          "type": "string"
        },
        "specificity": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.workbookRangeReference": {
      "title": "workbookRangeReference",
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.subscription": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "subscription",
          "type": "object",
          "properties": {
            "resource": {
              "type": "string"
            },
            "changeType": {
              "type": "string"
            },
            "clientState": {
              "type": "string"
            },
            "notificationUrl": {
              "type": "string"
            },
            "expirationDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.invitation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "invitation",
          "type": "object",
          "properties": {
            "invitedUserDisplayName": {
              "type": "string"
            },
            "invitedUserType": {
              "type": "string"
            },
            "invitedUserEmailAddress": {
              "type": "string"
            },
            "invitedUserMessageInfo": { },
            "sendInvitationMessage": {
              "type": "boolean"
            },
            "inviteRedirectUrl": {
              "type": "string"
            },
            "inviteRedeemUrl": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "invitedUser": { }
          }
        }
      ]
    },
    "microsoft.graph.invitedUserMessageInfo": {
      "title": "invitedUserMessageInfo",
      "type": "object",
      "properties": {
        "ccRecipients": {
          "type": "array",
          "items": { }
        },
        "messageLanguage": {
          "type": "string"
        },
        "customizedMessageBody": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.plannerTask": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerTask",
          "type": "object",
          "properties": {
            "createdBy": { },
            "planId": {
              "type": "string"
            },
            "bucketId": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "orderHint": {
              "type": "string"
            },
            "assigneePriority": {
              "type": "string"
            },
            "percentComplete": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "startDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "dueDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "hasDescription": {
              "type": "boolean"
            },
            "previewType": { },
            "completedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "completedBy": { },
            "referenceCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "checklistItemCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "activeChecklistItemCount": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "appliedCategories": { },
            "assignments": { },
            "conversationThreadId": {
              "type": "string"
            },
            "details": { },
            "assignedToTaskBoardFormat": { },
            "progressTaskBoardFormat": { },
            "bucketTaskBoardFormat": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerPlan": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerPlan",
          "type": "object",
          "properties": {
            "createdBy": { },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "title": {
              "type": "string"
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            },
            "buckets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerBucket"
              }
            },
            "details": { }
          }
        }
      ]
    },
    "microsoft.graph.planner": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "planner",
          "type": "object",
          "properties": {
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            },
            "plans": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerPlan"
              }
            },
            "buckets": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerBucket"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerBucket": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerBucket",
          "type": "object",
          "properties": {
            "name": {
              "type": "string"
            },
            "planId": {
              "type": "string"
            },
            "orderHint": {
              "type": "string"
            },
            "tasks": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.plannerTask"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerAppliedCategories": {
      "title": "plannerAppliedCategories",
      "type": "object"
    },
    "microsoft.graph.plannerAssignments": {
      "title": "plannerAssignments",
      "type": "object"
    },
    "microsoft.graph.plannerTaskDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerTaskDetails",
          "type": "object",
          "properties": {
            "description": {
              "type": "string"
            },
            "previewType": { },
            "references": { },
            "checklist": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerAssignedToTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerAssignedToTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "unassignedOrderHint": {
              "type": "string"
            },
            "orderHintsByAssignee": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerProgressTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerProgressTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "orderHint": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerBucketTaskBoardTaskFormat": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerBucketTaskBoardTaskFormat",
          "type": "object",
          "properties": {
            "orderHint": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.plannerPlanDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "plannerPlanDetails",
          "type": "object",
          "properties": {
            "sharedWith": { },
            "categoryDescriptions": { }
          }
        }
      ]
    },
    "microsoft.graph.plannerExternalReference": {
      "title": "plannerExternalReference",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "previewPriority": {
          "type": "string"
        },
        "lastModifiedBy": { },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.plannerChecklistItem": {
      "title": "plannerChecklistItem",
      "type": "object",
      "properties": {
        "isChecked": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "orderHint": {
          "type": "string"
        },
        "lastModifiedBy": { },
        "lastModifiedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        }
      }
    },
    "microsoft.graph.plannerAssignment": {
      "title": "plannerAssignment",
      "type": "object",
      "properties": {
        "assignedBy": { },
        "assignedDateTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "orderHint": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.plannerExternalReferences": {
      "title": "plannerExternalReferences",
      "type": "object"
    },
    "microsoft.graph.plannerChecklistItems": {
      "title": "plannerChecklistItems",
      "type": "object"
    },
    "microsoft.graph.plannerOrderHintsByAssignee": {
      "title": "plannerOrderHintsByAssignee",
      "type": "object"
    },
    "microsoft.graph.plannerUserIds": {
      "title": "plannerUserIds",
      "type": "object"
    },
    "microsoft.graph.plannerCategoryDescriptions": {
      "title": "plannerCategoryDescriptions",
      "type": "object",
      "properties": {
        "category1": {
          "type": "string"
        },
        "category2": {
          "type": "string"
        },
        "category3": {
          "type": "string"
        },
        "category4": {
          "type": "string"
        },
        "category5": {
          "type": "string"
        },
        "category6": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.onenoteEntityBaseModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "onenoteEntityBaseModel",
          "type": "object",
          "properties": {
            "self": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.onenoteEntitySchemaObjectModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityBaseModel"
        },
        {
          "title": "onenoteEntitySchemaObjectModel",
          "type": "object",
          "properties": {
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.onenoteEntityHierarchyModel": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntitySchemaObjectModel"
        },
        {
          "title": "onenoteEntityHierarchyModel",
          "type": "object",
          "properties": {
            "displayName": {
              "type": "string"
            },
            "createdBy": { },
            "lastModifiedBy": { },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.notebook": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "notebook",
          "type": "object",
          "properties": {
            "isDefault": {
              "type": "boolean"
            },
            "userRole": { },
            "isShared": {
              "type": "boolean"
            },
            "sectionsUrl": {
              "type": "string"
            },
            "sectionGroupsUrl": {
              "type": "string"
            },
            "links": { },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.onenoteSection": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "onenoteSection",
          "type": "object",
          "properties": {
            "isDefault": {
              "type": "boolean"
            },
            "links": { },
            "pagesUrl": {
              "type": "string"
            },
            "parentNotebook": { },
            "parentSectionGroup": { },
            "pages": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenotePage"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.sectionGroup": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityHierarchyModel"
        },
        {
          "title": "sectionGroup",
          "type": "object",
          "properties": {
            "sectionsUrl": {
              "type": "string"
            },
            "sectionGroupsUrl": {
              "type": "string"
            },
            "parentNotebook": { },
            "parentSectionGroup": { },
            "sections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.onenoteSection"
              }
            },
            "sectionGroups": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/microsoft.graph.sectionGroup"
              }
            }
          }
        }
      ]
    },
    "microsoft.graph.onenotePage": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntitySchemaObjectModel"
        },
        {
          "title": "onenotePage",
          "type": "object",
          "properties": {
            "title": {
              "type": "string"
            },
            "createdByAppId": {
              "type": "string"
            },
            "links": { },
            "contentUrl": {
              "type": "string"
            },
            "content": {
              "format": "base64url",
              "type": "string"
            },
            "lastModifiedDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "level": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "order": {
              "format": "int32",
              "maximum": 2147483647,
              "minimum": -2147483648,
              "type": "integer"
            },
            "userTags": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "parentSection": { },
            "parentNotebook": { }
          }
        }
      ]
    },
    "microsoft.graph.onenoteResource": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.onenoteEntityBaseModel"
        },
        {
          "title": "onenoteResource",
          "type": "object",
          "properties": {
            "content": {
              "format": "base64url",
              "type": "string"
            },
            "contentUrl": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.operation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.entity"
        },
        {
          "title": "operation",
          "type": "object",
          "properties": {
            "status": { },
            "createdDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            },
            "lastActionDateTime": {
              "format": "date-time",
              "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.onenoteOperation": {
      "allOf": [
        {
          "$ref": "#/definitions/microsoft.graph.operation"
        },
        {
          "title": "onenoteOperation",
          "type": "object",
          "properties": {
            "resourceLocation": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            },
            "error": { },
            "percentComplete": {
              "type": "string"
            }
          }
        }
      ]
    },
    "microsoft.graph.notebookLinks": {
      "title": "notebookLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": { },
        "oneNoteWebUrl": { }
      }
    },
    "microsoft.graph.externalLink": {
      "title": "externalLink",
      "type": "object",
      "properties": {
        "href": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.sectionLinks": {
      "title": "sectionLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": { },
        "oneNoteWebUrl": { }
      }
    },
    "microsoft.graph.pageLinks": {
      "title": "pageLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": { },
        "oneNoteWebUrl": { }
      }
    },
    "microsoft.graph.onenoteOperationError": {
      "title": "onenoteOperationError",
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.diagnostic": {
      "title": "diagnostic",
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "microsoft.graph.onenotePatchContentCommand": {
      "title": "onenotePatchContentCommand",
      "type": "object",
      "properties": {
        "action": { },
        "target": {
          "type": "string"
        },
        "content": {
          "type": "string"
        },
        "position": { }
      }
    },
    "microsoft.graph.onenotePagePreview": {
      "title": "onenotePagePreview",
      "type": "object",
      "properties": {
        "previewText": {
          "type": "string"
        },
        "links": { }
      }
    },
    "microsoft.graph.onenotePagePreviewLinks": {
      "title": "onenotePagePreviewLinks",
      "type": "object",
      "properties": {
        "previewImageUrl": { }
      }
    },
    "microsoft.graph.recentNotebook": {
      "title": "recentNotebook",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "lastAccessedTime": {
          "format": "date-time",
          "pattern": "^[0-9]{4,}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]([.][0-9]{1,12})?(Z|[+-][0-9][0-9]:[0-9][0-9])$",
          "type": "string"
        },
        "links": { },
        "sourceService": { }
      }
    },
    "microsoft.graph.recentNotebookLinks": {
      "title": "recentNotebookLinks",
      "type": "object",
      "properties": {
        "oneNoteClientUrl": { },
        "oneNoteWebUrl": { }
      }
    },
    "microsoft.graph.automaticRepliesStatus": {
      "title": "automaticRepliesStatus",
      "enum": [
        "disabled",
        "alwaysEnabled",
        "scheduled"
      ],
      "type": "string"
    },
    "microsoft.graph.externalAudienceScope": {
      "title": "externalAudienceScope",
      "enum": [
        "none",
        "contactsOnly",
        "all"
      ],
      "type": "string"
    },
    "microsoft.graph.attendeeType": {
      "title": "attendeeType",
      "enum": [
        "required",
        "optional",
        "resource"
      ],
      "type": "string"
    },
    "microsoft.graph.freeBusyStatus": {
      "title": "freeBusyStatus",
      "enum": [
        "free",
        "tentative",
        "busy",
        "oof",
        "workingElsewhere",
        "unknown"
      ],
      "type": "string"
    },
    "microsoft.graph.activityDomain": {
      "title": "activityDomain",
      "enum": [
        "unknown",
        "work",
        "personal",
        "unrestricted"
      ],
      "type": "string"
    },
    "microsoft.graph.bodyType": {
      "title": "bodyType",
      "enum": [
        "text",
        "html"
      ],
      "type": "string"
    },
    "microsoft.graph.importance": {
      "title": "importance",
      "enum": [
        "low",
        "normal",
        "high"
      ],
      "type": "string"
    },
    "microsoft.graph.inferenceClassificationType": {
      "title": "inferenceClassificationType",
      "enum": [
        "focused",
        "other"
      ],
      "type": "string"
    },
    "microsoft.graph.calendarColor": {
      "title": "calendarColor",
      "enum": [
        "lightBlue",
        "lightGreen",
        "lightOrange",
        "lightGray",
        "lightYellow",
        "lightTeal",
        "lightPink",
        "lightBrown",
        "lightRed",
        "maxColor",
        "auto"
      ],
      "type": "string"
    },
    "microsoft.graph.responseType": {
      "title": "responseType",
      "enum": [
        "none",
        "organizer",
        "tentativelyAccepted",
        "accepted",
        "declined",
        "notResponded"
      ],
      "type": "string"
    },
    "microsoft.graph.sensitivity": {
      "title": "sensitivity",
      "enum": [
        "normal",
        "personal",
        "private",
        "confidential"
      ],
      "type": "string"
    },
    "microsoft.graph.recurrencePatternType": {
      "title": "recurrencePatternType",
      "enum": [
        "daily",
        "weekly",
        "absoluteMonthly",
        "relativeMonthly",
        "absoluteYearly",
        "relativeYearly"
      ],
      "type": "string"
    },
    "microsoft.graph.dayOfWeek": {
      "title": "dayOfWeek",
      "enum": [
        "sunday",
        "monday",
        "tuesday",
        "wednesday",
        "thursday",
        "friday",
        "saturday"
      ],
      "type": "string"
    },
    "microsoft.graph.weekIndex": {
      "title": "weekIndex",
      "enum": [
        "first",
        "second",
        "third",
        "fourth",
        "last"
      ],
      "type": "string"
    },
    "microsoft.graph.recurrenceRangeType": {
      "title": "recurrenceRangeType",
      "enum": [
        "endDate",
        "noEnd",
        "numbered"
      ],
      "type": "string"
    },
    "microsoft.graph.eventType": {
      "title": "eventType",
      "enum": [
        "singleInstance",
        "occurrence",
        "exception",
        "seriesMaster"
      ],
      "type": "string"
    },
    "microsoft.graph.meetingMessageType": {
      "title": "meetingMessageType",
      "enum": [
        "none",
        "meetingRequest",
        "meetingCancelled",
        "meetingAccepted",
        "meetingTenativelyAccepted",
        "meetingDeclined"
      ],
      "type": "string"
    },
    "microsoft.graph.phoneType": {
      "title": "phoneType",
      "enum": [
        "home",
        "business",
        "mobile",
        "other",
        "assistant",
        "homeFax",
        "businessFax",
        "otherFax",
        "pager",
        "radio"
      ],
      "type": "string"
    },
    "microsoft.graph.websiteType": {
      "title": "websiteType",
      "enum": [
        "other",
        "home",
        "work",
        "blog",
        "profile"
      ],
      "type": "string"
    },
    "microsoft.graph.plannerPreviewType": {
      "title": "plannerPreviewType",
      "enum": [
        "automatic",
        "noPreview",
        "checklist",
        "description",
        "reference"
      ],
      "type": "string"
    },
    "microsoft.graph.operationStatus": {
      "title": "operationStatus",
      "enum": [
        "NotStarted",
        "Running",
        "Completed",
        "Failed"
      ],
      "type": "string"
    },
    "microsoft.graph.onenotePatchInsertPosition": {
      "title": "onenotePatchInsertPosition",
      "enum": [
        "After",
        "Before"
      ],
      "type": "string"
    },
    "microsoft.graph.onenotePatchActionType": {
      "title": "onenotePatchActionType",
      "enum": [
        "Replace",
        "Append",
        "Delete",
        "Insert",
        "Prepend"
      ],
      "type": "string"
    },
    "microsoft.graph.onenoteSourceService": {
      "title": "onenoteSourceService",
      "enum": [
        "Unknown",
        "OneDrive",
        "OneDriveForBusiness",
        "OnPremOneDriveForBusiness"
      ],
      "type": "string"
    },
    "microsoft.graph.onenoteUserRole": {
      "title": "onenoteUserRole",
      "enum": [
        "Owner",
        "Contributor",
        "Reader",
        "None"
      ],
      "type": "string"
    },
    "odata.error": {
      "required": [
        "error"
      ],
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/odata.error.main"
        }
      }
    },
    "odata.error.main": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/odata.error.detail"
          }
        },
        "innererror": {
          "description": "The structure of this object is service-specific",
          "type": "object"
        }
      }
    },
    "odata.error.detail": {
      "required": [
        "code",
        "message"
      ],
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "target": {
          "type": "string"
        }
      }
    }
  },
  "parameters": {
    "top": {
      "name": "$top",
      "in": "Query",
      "description": "Show only the first n items",
      "type": "integer",
      "minimum": 0
    },
    "skip": {
      "name": "$skip",
      "in": "Query",
      "description": "Skip the first n items",
      "type": "integer",
      "minimum": 0
    },
    "count": {
      "name": "$count",
      "in": "Query",
      "description": "Include count of items",
      "type": "boolean"
    },
    "filter": {
      "name": "$filter",
      "in": "Query",
      "description": "Filter items by property values",
      "type": "string"
    },
    "search": {
      "name": "$search",
      "in": "Query",
      "description": "Search items by search phrases",
      "type": "string"
    }
  },
  "responses": {
    "error": {
      "description": "error",
      "schema": {
        "$ref": "#/definitions/odata.error"
      }
    }
  },
  "tags": [
    {
      "name": "directoryObjects"
    },
    {
      "name": "devices"
    },
    {
      "name": "domains"
    },
    {
      "name": "domainDnsRecords"
    },
    {
      "name": "groups"
    },
    {
      "name": "directoryRoles"
    },
    {
      "name": "directoryRoleTemplates"
    },
    {
      "name": "organization"
    },
    {
      "name": "groupSettings"
    },
    {
      "name": "groupSettingTemplates"
    },
    {
      "name": "subscribedSkus"
    },
    {
      "name": "users"
    },
    {
      "name": "contracts"
    },
    {
      "name": "schemaExtensions"
    },
    {
      "name": "drives"
    },
    {
      "name": "shares"
    },
    {
      "name": "sites"
    },
    {
      "name": "workbooks"
    },
    {
      "name": "subscriptions"
    },
    {
      "name": "invitations"
    },
    {
      "name": "me"
    },
    {
      "name": "drive"
    },
    {
      "name": "planner"
    }
  ]
}
